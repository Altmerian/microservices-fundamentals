server:
  port: ${API_GATEWAY_PORT:8090}

spring:
  main:
    web-application-type: reactive
  application:
    name: api-gateway-service
  cloud:
    gateway:
      metrics:
        enabled: true
      routes:
        - id: resourceService
          uri: lb://RESOURCE-SERVICE
          predicates:
            - Path=/resources/**
        - id: songService
          uri: lb://SONG-SERVICE
          predicates:
            - Path=/songs/**
        - id: storageService
          uri: lb://STORAGE-SERVICE
          predicates:
            - Path=/storages/**

management:
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
      tags:
        application: ${spring.application.name}
    prometheus:
      enabled: true
    gateway:
      enabled: true # default value
  endpoints:
    web:
      exposure:
        include: metrics,info,health,prometheus,gateway
  health:
    diskspace.enabled: false

eureka:
  instance:
    hostname: ${API_GATEWAY_HOST:localhost}
    metadataMap:
      "prometheus.scrape": "true"
      "prometheus.path": "/actuator/prometheus"
      "metrics.path": "/actuator/metrics"
      "prometheus.port": "8090"
  client:
    serviceUrl:
      defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/

logging:
  pattern:
    level: trace_id=%mdc{trace_id} span_id=%mdc{span_id} trace_flags=%mdc{trace_flags} %5p
