version: '3.9'
x-logging: &logging
  logging:
    driver: loki
    options:
      loki-url: "http://loki:3100/loki/api/v1/push"

services:
  resource-service-db:
    image: postgres:14-alpine
    env_file: resource-service.env
    ports:
      - 5433:5432
    volumes:
      - resource-service-db:/var/lib/postgresql/data/

  song-service-db:
    image: postgres:14-alpine
    env_file: song-service.env
    ports:
      - 5434:5432
    volumes:
      - song-service-db:/var/lib/postgresql/data/

  storage-service-db:
    image: postgres:14-alpine
    env_file: storage-service.env
    ports:
      - 5435:5432
    volumes:
      - storage-service-db:/var/lib/postgresql/data/

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - 9093:9093
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    volumes:
      - kafka:/var/lib/kafka/data

  eureka-discovery-service:
    <<: *logging
    build:
      context: ../eureka-discovery-service
      args:
        JAR_FILE: build/libs/eureka-discovery-service.jar
    hostname: eureka-discovery-service
    ports:
      - 8761:8761
    env_file: .env
    depends_on:
      - loki

  api-gateway-service:
    <<: *logging
    build:
      context: ../api-gateway-service
      args:
        JAR_FILE: build/libs/api-gateway-service.jar
    ports:
      - 8090:8090
    env_file:
      - api-gateway.env
      - .env
    depends_on:
      - eureka-discovery-service
      - resource-service
      - song-service
      - resource-processor
      - storage-service
      - loki

  resource-service:
    <<: *logging
    build:
      context: ../resource-service
      args:
        JAR_FILE: build/libs/resource-service.jar
    env_file:
      - resource-service.env
      - .env
    ports:
      - 8081:8081
    volumes:
      - ~/.aws/:/root/.aws:ro
    depends_on:
      - resource-service-db
      - kafka
      - eureka-discovery-service
      - loki

  resource-processor:
    <<: *logging
    build:
      context: ../resource-processor
      args:
        JAR_FILE: build/libs/resource-processor.jar
    env_file:
      - resource-processor.env
      - .env
#    ports:
#      - 8080:8080
    depends_on:
      - resource-service
      - kafka
      - eureka-discovery-service
      - loki

  song-service:
    <<: *logging
    build:
      context: ../song-service
      args:
        JAR_FILE: build/libs/song-service.jar
    env_file:
      - song-service.env
      - .env
#    ports:
#      - 8082:8082
    depends_on:
      - song-service-db
      - eureka-discovery-service
      - loki

  storage-service:
    <<: *logging
    build:
      context: ../storage-service
      args:
        JAR_FILE: build/libs/storage-service.jar
    env_file:
      - storage-service.env
      - .env
    #    ports:
    #      - 8083:8083
    depends_on:
      - storage-service-db
      - eureka-discovery-service
      - loki

  loki:
    image: grafana/loki:latest
    volumes:
      - ../loki-config.yaml:/etc/loki/config.yaml
    ports:
      - "8100:8100"
    command: -config.file=/etc/loki/config.yaml

#  promtail:
#    image: grafana/promtail:latest
#    volumes:
#      - c:/ProgramData/Docker/containers/:/var/log/
#      - ../promtail-config.yaml:/etc/promtail/config.yml
#    command: '-config.file=/etc/promtail/config.yml -config.expand-env'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    depends_on:
      - loki


volumes:
  resource-service-db:
  song-service-db:
  storage-service-db:
  kafka:
