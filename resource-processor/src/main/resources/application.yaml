kafka:
  resource-topic: resource-upload
  bootstrap-address: ${KAFKA_HOST:localhost}:${KAFKA_PORT:9093}
  properties:
    auto.offset.reset: latest

infrastructure:
  resource-service-id: resource-service
  song-service-id: song-service
  storage-service-id: storage-service

eureka:
  instance:
    hostname: ${RESOURCE_PROCESSOR_HOST:localhost}
    preferIpAddress: false
    statusPageUrlPath: /actuator/info
    healthCheckUrlPath: /actuator/health
  client:
    serviceUrl:
      defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/

spring:
  application:
    name: resource-processor

management.endpoints.web.exposure.include: '*'
management.endpoint.health.show-details: always

management.health.diskspace.enabled: false
management.health.circuitbreakers.enabled: true

resilience4j:
  circuitbreaker:
    circuitBreakerAspectOrder: 1
    instances:
      storage-client:
        registerHealthIndicator: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        slidingWindowSize: 3
        minimumNumberOfCalls: 3
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        eventConsumerBufferSize: 10
        recordExceptions:
          - com.pshakhlovich.microservices_fundamentals.resource.processor.infrastructure.exception.InfrastructureException
        ignoreExceptions:
  retry:
    retryAspectOrder: 2
    instances:
      storage-client:
        maxAttempts: 3
        waitDuration: 1s
        retryExceptions:
          - com.pshakhlovich.microservices_fundamentals.resource.processor.infrastructure.exception.InfrastructureException

logging:
  pattern:
    level: trace_id=%mdc{trace_id} span_id=%mdc{span_id} trace_flags=%mdc{trace_flags} %5p

management:
  metrics:
    enabled: true
    tags.application: ${spring.application.name}